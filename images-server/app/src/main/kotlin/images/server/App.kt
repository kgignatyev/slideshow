/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package images.server

import io.ktor.application.*
import io.ktor.features.*
import io.ktor.gson.*
import io.ktor.http.*
import io.ktor.http.content.*
import io.ktor.response.*
import io.ktor.routing.*
import io.ktor.server.engine.*
import io.ktor.server.netty.*
import java.io.File

fun getProperty( key:String, defaultVal:String):String{
    println( "looking for parameter -D$key=...")
    var v = System.getProperty(key)
    if( v == null){
        println("no value supplied, use default: $defaultVal")
        v = defaultVal
    }
    return v
}

fun main(args: Array<String>) {
    val port = getProperty("port","8080" ).toInt()
    val photosRoot = getProperty("photos-root","/Volumes/kgi-backup/photos/light_room" )
    println("will show photos from folder: $photosRoot")
    println("visit  http://localhost:$port/app to start slideshow")

    val imagesSupplier = ImagesSupplier(File(photosRoot))



    embeddedServer(Netty, port = port) {
        install(CORS){
            anyHost()
        }

        install(ContentNegotiation) {
            gson {
                setPrettyPrinting()
                disableHtmlEscaping()
                // ...
            }
        }

        routing {
            get("/") {
                call.respondText("<body> <a href='http://localhost:$port/app'>Start slideshow</a></body>", ContentType.parse("text/html"))
            }
            get("/api/random-image") {
                call.respond(imagesSupplier.getRandomImage())
            }
            static("images"){
                staticRootFolder = imagesSupplier.rootDirForKtor()
                files(imagesSupplier.filesForKtor())


            }

            static("app"){

                files("slideshow-spa")
                default("slideshow-spa/index.html")
            }
        }


    }.start(true)
}

data class HelloWorld(val hello: String)


